

MMC 子系统范围三个部分：
	HOST 部分是针对不同主机的驱动程序，这一部是驱动程序工程师需要根据自己的特点平台来完成的。
	CORE 部分: 这是整个MMC 的核心存，这部分完成了不同协议和规范的实现，并为HOST 层的驱动提供了接口函数。
	CARD 部分：因为这些记忆卡都是块设备，当然需要提供块设备的驱动程序，这部分就是实现了将你的SD 卡如何实现为块设备的。
	它们分布于下面的文件夹中 Linux/drivers/mmc中

其中，card（区块层） 与core（核心层）是linux系统封装好了部分，我们不需要修改，host（主控制器层）中提供与各芯片构架相关的文件，这才是我们所要开发的部分
     核心层根据需要构造各种MMC/SD命令，这些命令怎么发送给MMC/SD卡呢？这通过主机控制器层来实现。这层是架构相关的，里面针对各款CPU提供一个文件，目前支持的CPU还很少。
      以本节即将移植的s3cmci.c为例，它首先进行一些低层设置，比如设置MMC/SD/SDIO控制器使用到的CPIO引脚、使能控制器、注册中断处理函数等，然后向上面的核心层增加一个主机（Host），这样核心层就能调用s3cmci.c提供的函数来识别、使用具体存储卡了。

      在向核心层增加主机之前，s3cmci.c 设置了一个mmc_host_ops结构体，它实现两个函数：

	a -- 发起访问请求的request函数

	b -- 进行一些属性设置（时钟频率、数据线位宽等）的set_ios函数。













